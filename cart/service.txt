var express = require("express")
    , morgan = require("morgan")
    , path = require("path")
    , bodyParser = require("body-parser")
    , app = express();
    , grpc = require("grpc")
    , protoLoader = require("@grpc/proto-loader")
    , cartService = new grpc.Server()
    , path=require('path');

function addItem(call , callback) {}
    function (req, res, next) {
    var obj = req.body;
    console.log("add ");
    console.log("Attempting to add to cart: " + JSON.stringify(req.body));


    //  var obj = JSON.parse(body);
    //       console.log('addToCart id '+id)
    var max = 0;
    var ind = 0;
    if (cart["" + obj.custId] === undefined)
        cart["" + obj.custId] = [];
    var c = cart["" + obj.custId];

    const found = c.some(item => item.name === obj.name);
    if(found){
        var index = c.findIndex(item => item.name === obj.name);
        c[index].price = obj.price;
        c[index].quantity = parseInt(c[index].quantity) + parseInt(obj.quantity);
    }
    else {
        for (ind = 0; ind < c.length; ind++)
            if (max < c[ind].cartid)
                max = c[ind].cartid;
        var cartid = max + 1;
        var data = {
            "cartid": cartid,
            "productID": obj.productID,
            "name": obj.name,
            "price": obj.price,
            "image": obj.image,
            "quantity": obj.quantity
        };
        console.log(JSON.stringify(data));
        c.push(data);
    }

    res.status(201);

    res.send("");


});

















//map grpc methods to local methods
// Define server with the methods and start it
cartService.addService(cart_proto.cart.CartService.service,
    { getItems: doGetItems,
        addItem: doAddItem,
        deleteItem: doDeleteItem,
        checkOut : doCheckOut
    });

cartService.bind(`0.0.0.0:${SERVER_PORT}`, grpc.ServerCredentials.createInsecure());

//start the grpc server
cartService.start();
console.log('Service started at port: ' + SERVER_PORT)